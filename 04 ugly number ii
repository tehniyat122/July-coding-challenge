Problem statement:
Write a program to find the n-th ugly number.

Ugly numbers are positive numbers whose prime factors only include 2, 3, 5. 

Example:

Input: n = 10
Output: 12
Explanation: 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.
Note:  

1 is typically treated as an ugly number.
n does not exceed 1690.






















class Solution {
public:
    /*
    Name:nthUglyNumber
    args:nth value
    return: nth ugly number
    Description:
    1. if n==1 return 1
    2. set count to 1 , i to 2
    3. while count <= n
        find prime factor of given no. if no divisible by 2||3||5
        increment count value
    
    */
    int findprimefactor(int i)
    {
        while(i%2 == 0)
        {
            i=i/2;
        }
        
          
        while(i%3 == 0)
        {
            i=i/3;
        }
        
        
         while(i%5 == 0)
        {
            i=i/5;
        }
        if(i > 2)
         {
             return false;
         }
        
        return true;
        
            
          
      
    }
    
    int nthUglyNumber(int n) {
        if(n == 1)
        {
            return 1;
        }
        int i = 2;
        int count = 2;
        while(count <= n)
        {
           
            if(findprimefactor(i))
            {
                 cout<<"count: "<<count<<"  "<<i <<endl;
                 count++;
            }
            i++;
        }
        return i-1;
    }
};


class Solution {
public:
    /*//dynamic Approach
    Name:nthUglyNumber
    args:nth value
    return: nth ugly number
    Description:
    0. if n <= 0 return 0
    1. if n==1 return 1
    2. initialise k[0] = 1, t2 =0 , t3=0, t5 =0 //initialise pointer to 0 increment only when min value istaken
    2. for i = 1 to n
    3.     find min value within the multiple of 2,3,5. increment only pointer of that.
    4.
    
    */
   
    
    int nthUglyNumber(int n) {
        if(n <= 0)
        {
            return 0;
        }
        if(n == 1)
        {
            return 1;
        }
         vector<int> k(n+1);
        k[0]=1;
        int t2 = 0, t3 = 0, t5 = 0;
        for(int i=1 ; i<= n ; i++)
        {  cout<<i<<endl;
            k[i] = min(k[t2]*2, min(k[t3]*3, k[t5]*5));
            if(k[i] == k[t2]*2 ){ t2++;}
            if(k[i] == k[t3]*3 ){ t3++;}
            if(k[i] == k[t5]*5 ){ t5++;}
            cout<<"k[i]"<<k[i]<<"  "<<i<<endl;
        }
        return k[n-1];
    }
};
